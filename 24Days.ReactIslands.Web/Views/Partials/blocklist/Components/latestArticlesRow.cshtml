@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks
@using Clean.Core.Extensions
@using Clean.Core.Helpers

@{
    var row = Model.Content as LatestArticlesRow;
    var settings = Model.Settings as LatestArticlesRowSettings;
    if (settings?.Hide ?? false) { return; }

    var spacingClasses = "";
    if (Model.Settings is ISpacingProperties spacing)
    {
        spacingClasses = SpacingHelper.GetSpacingClasses(spacing.PaddingTop, spacing.PaddingBottom, spacing.PaddingLeft, spacing.PaddingRight, spacing.MarginTop, spacing.MarginBottom, spacing.MarginLeft, spacing.MarginRight);
    }

    var pageSize = row.PageSize;
    var pageNumber = QueryStringHelper.GetIntFromQueryString(Context.Request.Query, "page", 1);
    var allArticles = row.ArticleList.Children<Article>().Where(x => x.IsVisible()).OrderByDescending(x => x.ArticleDate) ?? Enumerable.Empty<Article>();
    var pageOfArticles = allArticles.Skip((pageNumber - 1) * pageSize).Take(pageSize);
    var totalItemCount = allArticles.Count();
    var pageCount = totalItemCount > 0 ? Math.Ceiling((double)totalItemCount / pageSize) : 1;
}

<div class="row clearfix @(spacingClasses)">
    <div class="col-md-12 column">
        
        @{
            // Placed here for demo purposes to keep it together with the island below
            var content = new {
                articles = pageOfArticles.Select(x => new { x.Name, x.Subtitle })
            };
            var contentJson = Newtonsoft.Json.JsonConvert.SerializeObject(content);
        }

        <div class="react-component"
             data-component="BlogListing"
             data-content='@Html.Raw(contentJson)'></div>

        @if (row.ShowPagination)
        {
            @await Component.InvokeAsync("Pagination", new {totalItems = totalItemCount, url = row.ArticleList.Url(), pageNumber = pageNumber, pageSize = pageSize})
        }
    </div>
</div>

